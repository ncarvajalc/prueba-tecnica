services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - prod_network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_NAME: ${POSTGRES_DB}
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      PLACES_API_KEY: ${PLACES_API_KEY}
      PLACES_API_URL: ${PLACES_API_URL}
      GEO_CODING_API_URL: ${GEO_CODING_API_URL}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - mongodb
    networks:
      - prod_network
    restart: unless-stopped

networks:
  prod_network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
